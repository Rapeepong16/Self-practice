1) function findEvens(...nums) 
สร้างฟังก์ชันชื่อ findEvens

...nums คือ Rest parameter เก็บ Agument  ที่ส่งเข้ามาไว้ในรูป Array ชื่อ nums


2) let evens = [];
คือ สร้าง Array เปล่า เพื่อไว้เก็บเลขคู่

3) for (let n of nums) 
ใช้ for...of เพื่อวนค่าในอาร์เรย์ nums ทีละค่า 

4) if (n % 2 === 0) 
ตรวจว่า n เป็น เลขคู่รึเปล่าด้วยการใช้ Modulo (เศษจากการหาร)n % 2 จะให้เศษจากการหาร 2 ถ้าเศษเป็น 0 หมายความว่าเป็นเลขคู่


5) evens.push(n);

ถ้าเป็นคู่จริง ๆ ก็เพิ่มค่าลงไปใน Array evens

6) return evens;
เมื่อวนครบทุกค่าแล้ว คืนอาร์เรย์เลขคู่กลับไป

Shallow Equality

โค้ด shallowEqual ที่เขียนขึ้นมานี้เป็นฟังก์ชันสำหรับตรวจสอบ ระหว่างออบเจกต์สองตัว คือ objA และ objB การทำงานเริ่มต้นด้วยการเช็คว่าออบเจกต์ทั้ง reference เดียวกันหรือไม่ ถ้าใช่ก็คืนค่า true ทันที แต่ถ้าต่างกันก็จะตรวจสอบต่อว่าทั้งคู่เป็นชนิด object และไม่ใช่ null หรือไม่ ถ้าไม่ตรงตามเงื่อนไขก็คืนค่า false ไปเลย จากนั้นฟังก์ชันจะนำ Object.keys มาใช้เพื่อดึงคีย์ทั้งหมดของทั้งสอง Object ออกมา ถ้าจำนวนคีย์ไม่เท่ากันก็คืนค่า false ทันที แต่ถ้าเท่ากันจึงเริ่มทำการวนลูปตรวจสอบค่าของแต่ละคีย์ใน objA เปรียบเทียบกับ objB หากเจอค่าใดที่ไม่เท่ากันก็จะคืนค่า false ทันทีเช่นกัน ถ้าเช็คครบทุกคีย์แล้วไม่เจอความต่างก็สรุปได้ว่าคือ shallow equallity และคืนค่า true

ตัวอย่างการใช้งานคือ obj3 และ obj4 ซึ่งมีโครงสร้างเหมือนกัน { a: 1, b: 2 } เมื่อเรียก shallowEqual(obj3, obj4) ฟังก์ชันจะคืนค่า true เพราะจำนวน key ตรงกันและค่าของแต่ละคีย์ก็ตรงกันทั้งหมด ถึงแม้ทั้งสองจะเป็น Object คนละตัว (ไม่ใช่ reference เดียวกัน) แต่ค่าข้างในเหมือนกัน ทำให้การเปรียบเทียบแบบตื้นนี้ให้ผลว่า true.